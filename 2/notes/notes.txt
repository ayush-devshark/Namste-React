1. What is `NPM` ?
    - According to official docs, npm is world's largest software registry, where open source developers share and borrow packages. It is also used by organizations to manage private development as well.
    - Though 'npm' abbreviation does not have full form. Most developers refer to it as Node package manager, as it has registry of JavaScript packages, provides us with CLI for sharing such packages.

2. What is `Parcel/Webpack` ? Why do we need it ? 
    - Webpack/Parcel are static module bundlers for modern JS applications.
    - When webpack processes your applications it build internal dependency graph from one or more entry points
    - and then combines every module your project needs into one or more bundles, which are static assets to serve your content from.
    - Since version 4.0.0, webpack does not require a configuration file 

    - We need webpack to bundle our JS applications both (CommonJS and ESM), and it can also be extended to support many different assets such as images, fonts, and stylesheets.
    - With right plugins, we get more functionalities like minification, image optimization, polyfill our code, hot module replacement, tree shaking etc.

3. What is `.parcel-cache` ?
    - Parcel caches everything it builds to disk, so that once the server gets restarted it builds only files that were changes from last time it ran.
    - Parcel automatically tracks all the files, configuration, plugins, dev dependencies involved in build. It granularly invalidates the cache when something changes. 
    - Example - when some config file is changed, all the source files that rely on that config file will be rebuilt.

4. What is `npx` ?
    - Its a command, which helps us to run a command in npm package that either installed locally, or fetched remotely.
    - it similar to command 'npm run'

5. What is difference between `dependencies` vs `devDependencies` ?
    - dependencies - packages required by application in production  
    - devDependencies - packages only needed for local development and testing.

6. What is Tree Shaking ?
    - It is for dead (unused) code elimination.
    - Relies on ES2105 static structure of module syntax
    - it removes unused module exports detects through import, export syntax.
    - helps in building on existing dependencies and tools, without bloating size of the project.

7. What is Hot Module Replacement ? 
    - It exchanges, adds, removes modules while application is running without a full reload.
    - It saves development time by only updating what's changed.
    - Retains application state which gets lost during full reload.

8. List down your favourite 5 superpowers of Parcel/Webpack and describe any 3 of them in your 
 own word
    - 1. It provides module bundling, bundle optimization
    - 2. It does minification of assets
    - 3. It provides hot module replacement
    - 4. It provides tree shaking
    - 5. It provides assets management

    Through webpack config we can be sure our application support different kind of assets like png, svg etc.
    It provides minification of scripts, css, html, thus reducing size.
    It provides tree shaking, bundling code only which is used in our application.

9.  What is `.gitignore` ? What should we add and not add into it ? 
    - `.gitignore` is a plain text file containing list of all files and folders that should be ignored and not track.
    - we add files to gitignore to let it know that these are the files that are untracked, and should not be committed.
    - Files which are to be added in gitignore are the ones, we not want to commit for security reasons like .env files or because they are local to our project and can be re-created by other developers from config files such as package.lock.json and package.json (node_modules).
    - Files such as OS files, IDE config files, Files generated by libraries, Runtime files can be added to gitignore.
    - We should not add files that are not sensitive, not local to our machine, and which can not be re-created by running scripts command.
